input {
  file {
    path => ["/data/logs/**/EDMSrv.*.log"]
    exclude => [ "*.gz", "*.zip", "*.rar" ]
    start_position => "beginning"
    stat_interval => 1
    discover_interval => 10
    codec => multiline {
        charset => "Windows-1251"
        pattern => "^~LB~"
        negate => true
        what => "previous"
        max_lines => 2048
    }
  }
}

filter {
    grok {
        match => {
            message => [
                "~LB~%{TSLINE}%{THREADLINE}%{LVLLINE}\[(?<device>[^\]]+)?\]\[%{UUID:tag}?\]%{ONLINELINE}%{OPERATIONLINE}\[(?<details>.*)\]\[\]~LE~",
                "~LB~%{TSLINE}%{THREADLINE}%{LVLLINE}\[(?<device>[^\]]+)?\]\[%{UUID:tag}?\]%{OPERATIONLINE}\[(?<details>.*)\]\[\]~LE~",
                "~LB~%{TSLINE}%{THREADLINE}%{LVLLINE}\[(?<details>.*)\]\[\]~LE~",
                "#\[(?<operation>[^\d]+)\s%{TS:ts}\s\]"
            ]
        }
    }
    date {
        locale => "en"
        match => ["ts", "YYYY-MM-dd HH:mm:ss:SSS"]
        timezone => "Europe/Kiev"
        target => "@timestamp"
    }
    if [details] =~ "^{" {
        mutate{
            gsub => [ "details", "\s+", " " ]
        }
        json {
            skip_on_invalid_json => true
            source => "details"
            target => "details_json"
        }
        if "_jsonparsefailure" not in [tags] {
            mutate {
                remove_field => ["details"]
            }
        }
    }
    if "_grokparsefailure" not in [tags] {
        mutate {
            remove_field => ["message"]
        }
    }
}

output {
    elasticsearch {
        hosts => ["elasticsearch:9200"]
        index => "logs-dm-%{+YYYY.MM.dd}" 
    }
}